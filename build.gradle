buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        if(minecraft18.toBoolean()) {
            classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        }  else {
            classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        }
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version = "1.0"
group = "com.yourname.modid" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "PingTag" + (minecraft18.toBoolean() ? "1.8" : "1.12")

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    String minecraftVersion = null
    String versionMappings = null

    if (minecraft18.toBoolean()) {
        minecraftVersion = "1.8.9-11.15.1.1855"
        versionMappings = "snapshot_20160301"
    } else {
        minecraftVersion = "1.12.2-14.23.0.2512"
        versionMappings = "snapshot_20171003"
    }

    version = minecraftVersion
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = versionMappings
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    if (minecraft18.toBoolean()) {
        compile files('/libs/lm_api_mc1.8.9.jar')
    } else {
        compile files('/libs/lm_api_mc1.12.2.jar')
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

compileJava.options.encoding = 'UTF-8'

reobf {
  /*  jar {
        useNotchSrg()
    }
    
   */
}